(() => {
  // <stdin>
  var FixItBlog = class {
    /**
     * say hello
     * you can define your own functions below
     * @returns {FixItBlog}
     */
    hello() {
      console.log("custom.js: Hello FixIt!");
      return this;
    }
    /**
     * 检测当前语言并设置相应的界面元素
     * @returns {FixItBlog}
     */
    setupLanguage() {
      const path = window.location.pathname;
      const isEnglish = path.includes("/en/");
      const isChinese = path.includes("/zh-cn/") || !isEnglish && !path.includes("/");
      if (isEnglish) {
        document.documentElement.lang = "en";
        this.translateElements("en");
      } else {
        document.documentElement.lang = "zh-CN";
        this.translateElements("zh-cn");
      }
      return this;
    }
    /**
     * 翻译页面上的特定元素
     * @param {string} lang - 语言代码 ('en' 或 'zh-cn')
     * @returns {FixItBlog}
     */
    translateElements(lang) {
      const translations = {
        "en": {
          "archives": "Archives",
          "tags": "Tags",
          "categories": "Categories",
          "search": "Search",
          "menu": "Menu",
          "home": "Home",
          "posts": "Posts",
          "ai-summary": "Article Summary"
          // 添加这一行
          // 可以根据需要添加更多翻译
        },
        "zh-cn": {
          "archives": "\u5F52\u6863",
          "tags": "\u6807\u7B7E",
          "categories": "\u5206\u7C7B",
          "search": "\u641C\u7D22",
          "menu": "\u83DC\u5355",
          "home": "\u9996\u9875",
          "posts": "\u6587\u7AE0",
          "ai-summary": "\u6587\u7AE0\u6458\u8981"
          // 添加这一行
          // 可以根据需要添加更多翻译
        }
      };
      const dict = translations[lang] || translations["zh-cn"];
      document.querySelectorAll("[data-i18n]").forEach((el) => {
        const key = el.getAttribute("data-i18n");
        if (dict[key]) {
          el.textContent = dict[key];
        }
      });
      const searchInput = document.querySelector(".search-input");
      if (searchInput && dict["search"]) {
        searchInput.placeholder = dict["search"] + "...";
      }
      const aiSummaryTitle = document.querySelector(".ai-summary-title");
      if (aiSummaryTitle && dict["ai-summary"]) {
        aiSummaryTitle.textContent = dict["ai-summary"];
      }
      return this;
    }
    /**
     * 初始化AI摘要功能
     * @returns {FixItBlog}
     */
    initAISummary() {
      setTimeout(() => {
        if (typeof window.AISmmary !== "undefined") {
          window.aiConfig.aiApi = "https://ai-summary.xyz-liu15.workers.dev";
          const selectors = ["article", ".single .content", "#content-wrapper", ".content", "main"];
          let foundSelector = false;
          for (const selector of selectors) {
            if (document.querySelector(selector)) {
              window.aiConfig.aiSelector = selector;
              foundSelector = true;
              console.log("\u627E\u5230\u6709\u6548\u9009\u62E9\u5668:", selector);
              break;
            }
          }
          if (!foundSelector) {
            console.warn("\u672A\u627E\u5230\u6709\u6548\u7684\u5185\u5BB9\u9009\u62E9\u5668\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u503C");
            window.aiConfig.aiSelector = "article";
          }
          window.aiConfig.reportUrl = "mailto:xyz.liu15@gmail.com?subject=\u6587\u7AE0\u6458\u8981\u6295\u8BC9&body=\u6295\u8BC9\u7F51\u5740\uFF1A=" + location.href;
          window.aiConfig.enableAIPathRegex = /\/posts\//;
          const pathMatches = window.aiConfig.enableAIPathRegex.test(location.pathname);
          console.log("\u5F53\u524D\u8DEF\u5F84:", location.pathname, "\u662F\u5426\u5339\u914D:", pathMatches);
          if (pathMatches) {
            window.AISmmary.init(window.aiConfig);
            console.log("AI\u6458\u8981\u521D\u59CB\u5316\u5B8C\u6210");
          } else {
            console.log("\u5F53\u524D\u9875\u9762\u4E0D\u7B26\u5408AI\u6458\u8981\u8DEF\u5F84\u89C4\u5219\uFF0C\u8DF3\u8FC7\u521D\u59CB\u5316");
          }
        } else {
          console.error("AISmmary\u672A\u5B9A\u4E49\uFF0C\u8BF7\u68C0\u67E5ai-summary.js\u662F\u5426\u6B63\u786E\u52A0\u8F7D");
          const script = document.createElement("script");
          script.src = "/js/ai-summary.js";
          script.onload = () => {
            console.log("AI\u6458\u8981\u811A\u672C\u5DF2\u624B\u52A8\u52A0\u8F7D\uFF0C\u91CD\u65B0\u5C1D\u8BD5\u521D\u59CB\u5316");
            this.initAISummary();
          };
          script.onerror = () => {
            console.error("\u65E0\u6CD5\u52A0\u8F7DAI\u6458\u8981\u811A\u672C\uFF0C\u8BF7\u68C0\u67E5\u6587\u4EF6\u8DEF\u5F84");
          };
          document.head.appendChild(script);
        }
      }, 1e3);
      return this;
    }
    /**
     * initialize
     * @returns {FixItBlog}
     */
    init() {
      this.hello();
      this.setupLanguage();
      this.initAISummary();
      return this;
    }
  };
  (() => {
    window.fixitBlog = new FixItBlog();
    document.addEventListener("DOMContentLoaded", () => {
      window.fixitBlog.init();
    });
  })();
})();
//# sourceMappingURL=data:application/json;base64,
